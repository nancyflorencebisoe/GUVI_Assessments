GUVI – HCLTech : Assignment – 3

1. Personal Portfolio Website
Ans:
HTML:
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Nancy's Portfolio</title>
<link rel="stylesheet" href="styles.css" />
</head>
<body>
<header>
<h1>Nancy Florence</h1>
<p>Full Stack Developer</p>
<nav>
<a href="#about">About</a>
<a href="#work">Work</a>
<a href="#contact">Contact</a>
</nav>
</header>
<section id="about">
<h2>About Me</h2>
<p>I’m a full stack developer skilled in Java, Spring Boot, and React. I enjoy solving real-world problems with efficient code and clean design.</p>
</section>
<section id="work">
<h2>Work</h2>
<article>
<h3>Food Order App</h3>
<p>A complete food ordering platform with login, restaurant listings, cart, and checkout using Java and MySQL.</p>
</article>
<article>
<h3>Task Tracker</h3>
<p>A responsive to-do list app built with React and Firebase for real-time updates.</p>
</article>
</section>
<section id="contact">
<h2>Contact</h2>
<p>Feel free to reach out for collaboration or freelance work!</p>
<p>Email: food@example.com</p>
<p>GitHub: github.com/</p>
</section>
<footer>
<p>© 2025 Nancy Florence. All rights reserved.</p>
</footer>
</body>
</html>

CSS:
body {
 font-family: 'Segoe UI', sans-serif;
 margin: 0;
 padding: 0;
 background: #f5f5f5;
 color: #333;
}
header {
 background: #004466;
 color: white;
 text-align: center;
 padding: 2rem 1rem;
}
header nav {
 margin-top: 1rem;
}
header nav a {
 color: white;
 margin: 0 0.8rem;
 text-decoration: none;
 font-weight: bold;
}
section {
 padding: 2rem;
 max-width: 900px;
 margin: auto;
 background: white;
 margin-bottom: 1rem;
}
h2 {
 color: #004466;
}
footer {
 background: #004466;
 color: white;
 text-align: center;
 padding: 1rem;
}
/* Responsive design */
@media (max-width: 600px) {
 header nav {
   display: flex;
   flex-direction: column;
   gap: 0.5rem;
 }
 section {
   padding: 1rem;
 }
}

2. Blog Post Template
Ans:
HTML:
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<title>Responsive Navbar Tutorial</title>
<link rel="stylesheet" href="style.css"/>
</head>
<body>
<header>
<h1>Static Blog</h1>
</header>
<main>
<article>
<h2>Building a Responsive Navbar with HTML & CSS</h2>
<p class="meta">Written by <strong>Nancy</strong> | May 20, 2025</p>
<p>Responsive navigation bars are essential for creating mobile-friendly websites. In this tutorial, you'll learn how to build one using pure HTML and CSS.</p>
<blockquote>
       “A great user experience starts with clean, accessible navigation.”
</blockquote>
<h3>Step-by-Step Code</h3>
<pre><code>&lt;nav class="navbar"&gt;
&lt;a href="#"&gt;Home&lt;/a&gt;
&lt;a href="#"&gt;About&lt;/a&gt;
&lt;a href="#"&gt;Contact&lt;/a&gt;
&lt;/nav&gt;</code></pre>
<p>Use CSS media queries to hide/show links on smaller screens and style the menu toggle button.</p>
</article>
</main>
<footer>
<p>© 2025 Static Blog | All Rights Reserved</p>
</footer>
</body>
</html>

CSS:
body {
 font-family: 'Helvetica Neue', sans-serif;
 background: #fffaf0;
 margin: 0;
 color: #333;
}
header {
 background-color: #6a1b9a;
 color: white;
 text-align: center;
 padding: 2rem 1rem;
 box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}
main {
 max-width: 900px;
 margin: 2rem auto;
 padding: 2rem;
 background: #ffffff;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
}
article h2 {
 color: #6a1b9a;
}
.meta {
 font-size: 0.9rem;
 color: #555;
 margin-bottom: 1rem;
}
blockquote {
 background-color: #f3e5f5;
 border-left: 5px solid #9c27b0;
 margin: 1.5rem 0;
 padding: 1rem;
 font-style: italic;
 color: #4a148c;
}
pre {
 background: #263238;
 color: #eceff1;
 padding: 1rem;
 overflow-x: auto;
 border-radius: 5px;
}
code {
 font-family: 'Courier New', monospace;
 font-size: 0.95rem;
}
footer {
 background-color: #6a1b9a;
 color: white;
 text-align: center;
 padding: 1rem;
 margin-top: 2rem;
}
/* Responsive Design */
@media (max-width: 600px) {
 main {
   padding: 1rem;
 }
 header {
   padding: 1.5rem 1rem;
 }
 article h2 {
   font-size: 1.5rem;
 }
}

3. Quiz App
Ans:
HTML:
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<title>Simple Quiz</title>
<link rel="stylesheet" href="quiz.css" />
</head>
<body>
<div class="quiz-container">
<h1>Simple Quiz App</h1>
<div id="quiz-box">
<h2 id="question">Question comes here</h2>
<div class="options">
<button class="option-btn" onclick="selectAnswer(0)"></button>
<button class="option-btn" onclick="selectAnswer(1)"></button>
<button class="option-btn" onclick="selectAnswer(2)"></button>
<button class="option-btn" onclick="selectAnswer(3)"></button>
</div>
<button id="next-btn" onclick="nextQuestion()">Next</button>
</div>
<div id="result-box" class="hidden">
<h2>Quiz Completed!</h2>
<p id="final-score"></p>
<button onclick="restartQuiz()">Restart Quiz</button>
</div>
</div>
<script src="quiz.js"></script>
</body>
</html>

CSS:
body {
 font-family: sans-serif;
 background-color: #e0f7fa;
 margin: 0;
 display: flex;
 justify-content: center;
 align-items: center;
 height: 100vh;
}
.quiz-container {
 background: white;
 padding: 2rem;
 max-width: 600px;
 width: 90%;
 border-radius: 10px;
 box-shadow: 0 0 10px rgba(0,0,0,0.2);
 text-align: center;
}
h1 {
 margin-bottom: 1rem;
}
.options {
 display: flex;
 flex-direction: column;
 gap: 0.75rem;
 margin: 1rem 0;
}
.option-btn {
 padding: 0.75rem;
 background-color: #b2ebf2;
 border: none;
 border-radius: 5px;
 cursor: pointer;
 font-size: 1rem;
}
.option-btn:hover {
 background-color: #4dd0e1;
}
#next-btn, .hidden {
 display: none;
}
#next-btn {
 margin-top: 1rem;
 padding: 0.75rem 1.5rem;
 background-color: #00796b;
 color: white;
 border: none;
 border-radius: 5px;
 cursor: pointer;
}
#next-btn:hover {
 background-color: #004d40;
}

Script:
const questions = [
 {
   question: "Which language is used for web apps?",
   options: ["PHP", "Python", "JavaScript", "All of the above"],
   correct: 3
 },
 {
   question: "What does CSS stand for?",
   options: ["Cascading Style Sheets", "Colorful Style Sheets", "Creative Style Sheets", "Computer Style Sheets"],
   correct: 0
 },
 {
   question: "Which HTML tag is used to display images?",
   options: ["<img>", "<picture>", "<src>", "<image>"],
   correct: 0
 }
];
let current = 0;
let score = 0;
const questionEl = document.getElementById("question");
const optionBtns = document.querySelectorAll(".option-btn");
const nextBtn = document.getElementById("next-btn");
const resultBox = document.getElementById("result-box");
const quizBox = document.getElementById("quiz-box");
const finalScore = document.getElementById("final-score");
function loadQuestion() {
 const q = questions[current];
 questionEl.textContent = q.question;
 optionBtns.forEach((btn, index) => {
   btn.textContent = q.options[index];
   btn.classList.remove("correct", "wrong", "disabled");
   btn.disabled = false;
 });
 nextBtn.style.display = "none";
}
function selectAnswer(selected) {
 const q = questions[current];
 optionBtns.forEach((btn, index) => {
   btn.disabled = true;
   if (index === q.correct) btn.classList.add("correct");
   if (index === selected && index !== q.correct) btn.classList.add("wrong");
 });
 if (selected === q.correct) score++;
 nextBtn.style.display = "inline-block";
}
function nextQuestion() {
 current++;
 if (current < questions.length) {
   loadQuestion();
 } else {
   showResult();
 }
}
function showResult() {
 quizBox.style.display = "none";
 resultBox.classList.remove("hidden");
 finalScore.textContent = `Your Score: ${score} / ${questions.length}`;
}
function restartQuiz() {
 current = 0;
 score = 0;
 quizBox.style.display = "block";
 resultBox.classList.add("hidden");
 loadQuestion();
}
loadQuestion();
